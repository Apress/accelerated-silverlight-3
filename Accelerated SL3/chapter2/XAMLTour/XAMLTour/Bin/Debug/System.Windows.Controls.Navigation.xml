<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Navigation</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
            <summary>
                 FragmentNavigationEventArgs exposes the fragment being navigated to
                 in an event fired from NavigationService to notify a listening client
                 that a navigation to fragment is about to occur.
            </summary> 
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
            <summary>
             The fragment part of the URI that was passed to the Navigate() API which initiated this navigation.
             The fragment may be String.Empty to indicate a scroll to the top of the page.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
            <summary>
            Event data used to qualify navigating events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Default constructor.
            </summary>
            <param name="uri">A URI representing the navigation destination.</param>
            <param name="mode">What type of navigation this is (New, Forward or Back)</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
            <summary>
            Gets the Uri that is being navigated to
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
            <summary>
            Gets the type of navigation that has been initiated (New, Forward or Back)
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationContext">
            <summary>
            Represents the state of a navigation operation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationContext.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Default constructor.
            </summary>
            <param name="uri">Navigation operation URI value.</param>
            <param name="queryString">Collection of query string values.</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationContext.Uri">
            <summary>
            Gets a value of the navigation URI.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationContext.QueryString">
            <summary>
            Gets a collection of query string values.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
            <summary>
            Delegate for the Navigating event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
            <summary>
            Delegate for the NavigationFailed event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigatedEventHandler">
            <summary>
            Delegate for the Navigated event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
            <summary>
            Delegate for the NavigationStopped event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
            <summary>
            Delegate for FragmentNavigation event
            </summary>
            <param name="sender">The object sending this event</param>
            <param name="e">The event arguments</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Navigation.NavigationEventArgs">
            <summary>
            Event data used to qualify navigation events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
            <summary>
            Default constructor.
            </summary>
            <param name="content">A reference to the content being navigated to (if available).</param>
            <param name="uri">A URI representing the navigation destination.</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
            <summary>
            Gets a reference to the content being navigated to (if available).
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
            <summary>
            Gets a URI representing the navigation destination.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
            <summary>
            Event arguments used by the <see cref="E:System.Windows.Controls.Frame.NavigationFailed"/> and <see cref="E:System.Windows.Navigation.NavigationService.NavigationFailed"/> events.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationFailedEventArgs.#ctor(System.Uri,System.Exception)">
            <summary>
            Constructs a set of event arguments
            </summary>
            <param name="uri">The Uri to which navigation failed</param>
            <param name="error">The error that occurred</param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
            <summary>
            Gets the Uri that failed to be navigated to
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
            <summary>
            Gets the error that caused navigation to fail
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this failure event has been handled.
            If this is false after NavigationFailed completes, the exception will
            be thrown.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Frame">
            <summary>
            A frame control with the ability to navigate to and from content.
            </summary>
            <seealso cref="T:System.Windows.Controls.Page"/>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Frame.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Frame.SourceProperty">
            <summary>
            The DependencyProperty for the Source property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.SourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Source property is changed
            </summary>
            <param name="depObj"></param>
            <param name="e"></param>
        </member>
        <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
            <summary>
            The DependencyProperty for the JournalOwnership property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.ApplyDeepLinks">
            <summary>
            This will check for deep link values in the URL if the Frame's 
            IJournal is integrated with the browser.
            </summary>
            <returns>A value indicating whether or not deep links were found.</returns>
        </member>
        <member name="M:System.Windows.Controls.Frame.StopLoading">
            <summary>
            StopLoading aborts asynchronous navigations that haven't been processed yet.
            The Stopped event is fired only if the navigation was aborted.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.GoBack">
            <summary>
            Navigates the Frame to the previous journal entry in the history stack.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.GoForward">
            <summary>
            Navigates the Frame to the next journal entry in the history stack.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
            <summary>
            Navigates to the provided URI.
            </summary>
            <param name="uri">A URI representing an IPageControl instance to display in the Frame.</param>
            <returns>True if the navigation was begun successfully, false if it was not.</returns>
        </member>
        <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
            <summary>
            Hook our template parts and store them off for easy access later
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Frame.Frame_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the Frame.Loaded event fires.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.Frame.PART_nextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Next button handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.Frame.PART_previousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Previous button handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:System.Windows.Controls.Frame.Navigated">
            <summary>
            Occurs when the Frame has navigated.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.Navigating">
            <summary>
            Occurs when the Frame is starting to navigate.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.NavigationFailed">
            <summary>
            Occurs when the an exception is raised during navigation.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.NavigationStopped">
            <summary>
            Occurs when a navigation operation has been cancelled.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
            <summary>
            Occurs when a navigation occurs within a page
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.Source">
            <summary>
            Gets or sets the Uri of the content currently hosted in the Frame.
            </summary>
            <remarks>
            This value may be different from CurrentSource if you set Source and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Frame.JournalOwnership">
            <summary>
            Gets or sets a value indicating if this <see cref="T:System.Windows.Controls.Frame"/> owns its own journal, or attempts
            to integrate with the browser journal.  See <see cref="P:System.Windows.Controls.Frame.JournalOwnership"/> for a description of
            the options.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CanGoBack">
            <summary>
            Gets a value indicating whether or not the Frame can navigate backward.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CanGoForward">
            <summary>
            Gets a value indicating whether or not the Frame can navigate forward.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Frame.CurrentSource">
            <summary>
            Gets the Uri of the content currently hosted in the Frame.
            </summary>
            <remarks>
            This value may be different from Source if you set Source and the
            navigation has not yet completed.  CurrentSource reflects the page currently
            in the frame at all times, even when an async loading operation is in progress.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Page">
            <summary>
            Represents a piece of navigable content
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Page.#ctor">
            <summary>
            Constructs a default Page instance
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Page.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
            <summary>
            This method is called when fragment navigation occurs on a page - either because a fragment
            was present in the original Uri that navigated to this page, or because a later fragment
            navigation occurs.
            </summary>
            <remarks>
            This should be used rather than signing up for this.NavigationService.FragmentNavigation
            because that event may be difficult to sign up for in time to get the first fragment navigation.
            </remarks>
            <param name="e">The event arguments, containing the fragment navigated to</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)">
            <summary>
            This method is called when a Page has been navigated to, and becomes the active Page in a Frame.
            This method is the preferred place to inspect this.NavigationContext, and react to load-time
            information and prepare the page for viewing.
            </summary>
            <remarks>
            This should be used rather than Loaded because Loaded signifies you have been added to the visual
            tree, but that could potentially happen more than once during a logical navigation event, in
            some advanced scenarios.  This method is guaranteed to be called only once when the Page becomes
            active.
            </remarks>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)">
            <summary>
            This method is called when a Page is about to be navigated away from.
            </summary>
            <remarks>
            This is similar to signing up for this.NavigationService.Navigating, but this method is preferred
            as then you do not need to remove the event handler from NavigationService to avoid object lifetime
            issues.
            </remarks>
            <param name="e">The event arguments.  If Cancel is set to true, it will cancel the pending operation that triggered this method call.</param>
        </member>
        <member name="M:System.Windows.Controls.Page.OnNavigatedFrom(System.Windows.Navigation.NavigationEventArgs)">
            <summary>
            This method is called when a Page has been navigated away from, and is no longer the active
            Page in a Frame.  This is a good time to save dirty data or otherwise react to being
            inactive.
            </summary>
            <remarks>
            This is similar to signing up for this.NavigationService.Navigated, but this method is preferred
            as then you do not need to remove the event handler from NavigationService to avoid object lifetime
            issues.
            </remarks>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:System.Windows.Controls.Page.NavigationContext">
            <summary>
            Gets the navigation request context.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Page.NavigationService">
            <summary>
            Gets the <see cref="P:System.Windows.Controls.Page.NavigationService"/> that navigated to this page
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Page.Title">
            <summary>
            Gets or sets the title of this page, which may be shown in the browser window if this page
            is hosted in a browser-integrated <see cref="T:System.Windows.Controls.Frame"/>.  Leave this property null to indicate
            it should not affect the title.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.ContentLoaderBase">
            <summary>
            ContentLoaderBase serves as the base class for all content loaders that plug into NavigationService.
            </summary>
            <remarks>ContentLoaderBase types should always generate and load content asychronously.</remarks>
            <seealso cref="T:System.Windows.Navigation.PageResourceContentLoader"/>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins asynchronous loading of the provided <paramref name="uri"/>.
            </summary>
            <param name="uri">A URI value to resolve and begin loading.</param>
            <param name="userCallback">A callback function that will be called when this asynchronous request is ready to have <see cref="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)"/> called on it.</param>
            <param name="asyncState">A custom state object that will be returned in <see cref="P:System.IAsyncResult.AsyncState"/>, to correlate between multiple async calls.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be passed to <see cref="M:System.Windows.Navigation.ContentLoaderBase.CancelLoad(System.IAsyncResult)"/> at any time, or <see cref="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)"/> after the <paramref name="userCallback"/> has been called.</returns>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.CancelLoad(System.IAsyncResult)">
            <summary>
            Attempts to cancel a pending load operation.
            </summary>
            <param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned from <see cref="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/> for the operation you wish to cancel.</param>
        </member>
        <member name="M:System.Windows.Navigation.ContentLoaderBase.EndLoad(System.IAsyncResult)">
            <summary>
            Completes the asynchronous loading of content
            </summary>
            <param name="asyncResult">The result returned from <see cref="M:System.Windows.Navigation.ContentLoaderBase.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/>, and passed in to the callback function.</param>
            <returns>The content loaded, or null if content was not loaded</returns>
        </member>
        <member name="T:System.Windows.Navigation.PageResourceContentLoader">
            <summary>
            Default implementation of IContentLoader that is capable of resolving URI values to XAML types (of IPageControl) located in the application deployment XAP.
            </summary>
            <remarks>The URI values used to indicate XAML IPageControl types should always be relative to the XAP root.  Do not generate URI values relative to XAML IPageControl type locations.</remarks>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.GetLocalXaml(System.String)">
            <summary>
            Returns the XAML string of the page at the given path.
            If that page cannot be found (path does not exist, etc.)
            then it returns null.
            </summary>
            <param name="pagePathAndName">The path and name of the XAML (with the ".xaml" included)</param>
            <returns>See summary</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins asynchronous loading of the provided <paramref name="uri"/>.
            </summary>
            <param name="uri">A URI value to resolve and begin loading.</param>
            <param name="userCallback">A callback function that will be called when this asynchronous request is ready to have <see cref="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)"/> called on it.</param>
            <param name="asyncState">A custom state object that will be returned in <see cref="P:System.IAsyncResult.AsyncState"/>, to correlate between multiple async calls.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be passed to <see cref="M:System.Windows.Navigation.PageResourceContentLoader.CancelLoad(System.IAsyncResult)"/> at any time, or <see cref="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)"/> after the <paramref name="userCallback"/> has been called.</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.CancelLoad(System.IAsyncResult)">
            <summary>
            Attempts to cancel a pending load operation.
            </summary>
            <param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned from <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/> for the operation you wish to cancel.</param>
            <remarks>Cancellation is not guaranteed.  Check the result from EndLoad to determine if cancellation was successful.</remarks>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)">
            <summary>
            Completes the asynchronous loading of content
            </summary>
            <param name="asyncResult">The result returned from <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/>, and passed in to the callback function.</param>
            <returns>The content loaded, or null if content was not loaded</returns>
        </member>
        <member name="M:System.Windows.Navigation.PageResourceContentLoader.PageResourceContentLoaderAsyncResult.#ctor(System.Uri,System.Object)">
            <summary>
            Constructs an instance of the <see cref="T:System.Windows.Navigation.PageResourceContentLoader.PageResourceContentLoaderAsyncResult"/>
            </summary>
            <param name="uri">The Uri that the <see cref="T:System.Windows.Navigation.PageResourceContentLoader"/> is loading.</param>
            <param name="asyncState">The state object the user passed in to <see cref="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="T:System.Windows.Navigation.Journal">
            <summary>
            Journal used to manage a history list of JournalEntry items.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.Journal._syncLock">
            <summary>
            Synchronization lock object.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.Journal._suppressNavigationEvent">
            <summary>
            Used to indicate whether or not to suppress navigation events.
            </summary>
            <remarks>
            This is used internally to avoid redundant browser navigation calls after deep link values are detected.
            </remarks>
        </member>
        <member name="F:System.Windows.Navigation.Journal._weakRefEventHandler">
            <summary>
            Internal event handler reference used to sign up to the UriFragmentHelper.Navigated event.
            </summary>
            <remarks>
            The event handler constructed here will use a weak reference to self in order to allow for this instance to be collected.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.AddHistoryPoint(System.Windows.Navigation.JournalEntry)">
            <summary>
            Adds a new JournalEntry to the history stack.
            </summary>
            <param name="journalEntry">A new JournalEntry to add to the history stack.</param>
            <remarks>
            Any JournalEntry items existing on the ForwardStack will be removed.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.CheckForDeeplinks">
            <summary>
            Forces the BrowserJournal to check for deep-link values in 
            the browser address URI.
            </summary>
            <returns>
            A boolean indicating whether or not a deep-link value was found.
            </returns>
        </member>
        <member name="M:System.Windows.Navigation.Journal.GoBack">
            <summary>
            Navigates the Journal instance back to the previous 
            JournalEntry item in the history stack.
            </summary>
            <remarks>
            If CanGoBack is false, this method will throw an InvalidOperationException.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.GoForward">
            <summary>
            Navigates the Journal instance forward to the next 
            JournalEntry item in the history stack.
            </summary>
            <remarks>
            If CanGoForward is false, this method will throw an InvalidOperationException.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.Journal.NavigateBrowser(System.Windows.Navigation.JournalEntry)">
            <summary>
            Updates the browser location to reflect the Journal state, if the Journal is browser integrated.
            </summary>
            <param name="journalEntry">JournalEntry used to update the browser location.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.Browser_Navigated(System.Object,System.EventArgs)">
            <summary>
            Occurs when the UriFragmentHelper has navigated.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="eventArgs">Empty event args.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.AddHistoryPointIfDifferent(System.String)">
            <summary>
            Conditionally adds a new history point if the new state information differs from the current journal entry Uri value.
            </summary>
            <param name="newState">An updated state value to examine.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.InitializeNavigationHandler">
            <summary>
            Signs up for events on UriFragmentHelper.Navigated using a weak-reference based event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.Journal.OnNavigated(System.String,System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Raises the Navigated event.
            </summary>
            <param name="name">A value representing a journal entry name.</param>
            <param name="uri">A value representing a journal entry URI.</param>
            <param name="mode">A value representing a journal entry navigation mode.</param>
        </member>
        <member name="M:System.Windows.Navigation.Journal.UpdateObservables(System.Windows.Navigation.JournalEntry,System.Windows.Navigation.NavigationMode)">
            <summary>
            Updates observable properties of the journal.
            </summary>
            <param name="currentEntry">The current journal entry.</param>
            <param name="mode">The mode of navigation that triggered the update.</param>
        </member>
        <member name="P:System.Windows.Navigation.Journal.BrowserIntegrated">
            <summary>
            Gets a value indicating whether or not this journal instance is
            integrated with the browser.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CanGoBack">
            <summary>
            Gets a value indicating whether or not the Journal instance
            can navigate backward.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CanGoForward">
            <summary>
            Gets a value indicating whether or not the Journal instance
            can navigate forward.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.CurrentEntry">
            <summary>
            Gets the current JournalEntry or null if no history items exist.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.BackStack">
            <summary>
            Gets a stack of back entries in this journal
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Journal.ForwardStack">
            <summary>
            Gets a stack of forward entries in this journal
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalEntry">
            <summary>
            A journal history entry.
            </summary>
            <seealso cref="T:System.Windows.Navigation.Journal"/>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.String,System.Uri)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">The journal entry name.</param>
            <param name="uri">The journal entry URI value.</param>
        </member>
        <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
            <summary>
            An attached dependency property used to specify a name for a journal entry, which may be reflected in the browser window
            if the journal is integrated with the browser.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property on the <paramref name="obj"/>.
            </summary>
            <param name="obj">The object to inspect for a <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/></param>
            <returns>The value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property.</returns>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> attached property on the <paramref name="obje"/>.
            </summary>
            <param name="obj">The object to set the <see cref="F:System.Windows.Navigation.JournalEntry.NameProperty"/> on.</param>
            <param name="name">The name to set</param>
        </member>
        <member name="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty">
            <summary>
            An attached dependency property used to specify a <see cref="P:System.Windows.Navigation.JournalEntry.NavigationContext"/> for a piece of content which
            has been navigated to.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.GetNavigationContext(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property on the <paramref name="obj"/>.
            </summary>
            <param name="obj">The object to inspect for a <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/></param>
            <returns>The value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property.</returns>
        </member>
        <member name="M:System.Windows.Navigation.JournalEntry.SetNavigationContext(System.Windows.DependencyObject,System.Windows.Navigation.NavigationContext)">
            <summary>
            Sets the value of the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> attached property on the <paramref name="obje"/>.
            </summary>
            <param name="obj">The object to set the <see cref="F:System.Windows.Navigation.JournalEntry.NavigationContextProperty"/> on.</param>
            <param name="navigationContext">The navigation context to set</param>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.Name">
            <summary>
            Gets or sets the journal entry name.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.NavigationContext">
            <summary>
            Gets or sets the <see cref="P:System.Windows.Navigation.JournalEntry.NavigationContext"/> for the journal entry
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEntry.Source">
            <summary>
            Gets or sets the Uri that for this journal entry
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalEventArgs">
            <summary>
            Event arguments used to describe journaling events.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.JournalEventArgs.#ctor(System.String,System.Uri,System.Windows.Navigation.NavigationMode)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">A value representing a journal event name.</param>
            <param name="uri">A value representing a journal event URI.</param>
            <param name="mode">A value representing a journal event navigation mode.</param>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.Name">
            <summary>
            Gets a value containing the journal event name.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.Uri">
            <summary>
            Gets a value containing the journal event URI.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.JournalEventArgs.NavigationMode">
            <summary>
            Gets a value representing the journal event navigatiom mode.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.JournalOwnership">
            <summary>
            Used by the <see cref="T:System.Windows.Controls.Frame"/> to indicate what type of journal it should use.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should walk up the visual tree to determine if it is top-level.
            If it is top-level, this is the same as <see cref="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal"/>.
            If it is not top-level, this is the same as <see cref="F:System.Windows.Navigation.JournalOwnership.OwnsJournal"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should keep its own journal and not integrate with the browser.
            This option can be set on any <see cref="T:System.Windows.Controls.Frame"/>
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
            <summary>
            Indicates that the <see cref="T:System.Windows.Controls.Frame"/> should integrate with the browser journal.  If this <see cref="T:System.Windows.Controls.Frame"/> is not
            a top-level Frame, this is not valid and an exception will be thrown.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationMode">
            <summary>
            Enum describing the NavigationMode (New, Back, Forward)
            where New means a new navigation, Forward, and Back mean 
            the navigation was initiated from the GoForward, or 
            GoBack (or corresponding UI button).
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.New">
            <summary>
            New navigation.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.Back">
            <summary>
            Navigating back in history.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.NavigationMode.Forward">
            <summary>
            Navigating back in history.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.NavigationService">
            <summary>
            Used to programmatically initiate navigation, primarily from within a <see cref="T:System.Windows.Controls.Page"/>.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.#ctor(System.Windows.Controls.Frame)">
            <summary>
            Internal class used to host content and handles all navigations
            </summary>
            <param name="nav">
            Parent navigator that uses and owns this NS. (It's either NavigationWindow or Frame.)
            </param>
        </member>
        <member name="F:System.Windows.Navigation.NavigationService.NavigationServiceProperty">
            <summary>
            Attached DependencyProperty. It gives an element the NavigationService of the navigation container it's in.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
            <summary>
            Gets NavigationService of the navigation container the given dependencyObject is in.
            </summary>
            <param name="dependencyObject">The object to retrieve the attached <see cref="T:System.Windows.Navigation.NavigationService"/> for</param>
            <returns>The <see cref="T:System.Windows.Navigation.NavigationService"/> attached to the <paramref name="dependencyObject"/></returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
            <summary>
            Navigate to source
            </summary>
            <param name="source">The Uri to begin navigating to</param>
            <returns>True if the navigation was begun successfully, false if it was not.</returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GoForward">
            <summary>
            Navigate to the next entry in the Journal
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.GoBack">
            <summary>
            Navigate to the next entry in the Journal
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
            <summary>
            StopLoading aborts asynchronous navigations that haven't been processed yet or that are
            still being downloaded. SopLoading does not abort parsing of the downloaded streams.
            The NavigationStopped event is fired only if the navigation was aborted.
            </summary>
            <value></value>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigated(System.Object,System.Uri)">
            <summary>
            Raises the Navigated event asynchronously.
            </summary>
            <param name="content">A reference to the object content that is being navigated to.</param>
            <param name="uri">A URI value representing the navigation content.</param>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigating(System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
            <summary>
            Raises the Navigating event synchronously.
            </summary>
            <param name="uri">A URI value representing the navigation content.</param>
            <param name="mode">The mode of navigation being initiated (New, Forward or Back)</param>
            <param name="isFragmentNavigationOnly">True if this navigation is only a fragment navigation on the existing page, false if it is any other type of navigation</param>
            <returns>A value indicating whether or not to cancel the navigation operation.</returns>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigationFailed(System.Uri,System.Exception)">
            <summary>
            Raises the Failed event synchronously.
            </summary>
            <param name="uri">A URI value representing the navigation content.</param>
            <param name="exception">The error that occurred</param>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseNavigationStopped(System.Object,System.Uri)">
            <summary>
            Raises the Stopped event asynchronously.
            </summary>
            <param name="content">A reference to the object content that is being navigated to.</param>
            <param name="uri">A URI value representing the navigation content.</param>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.RaiseFragmentNavigation(System.String)">
            <summary>
            Raises the Fragment Navigation event asynchronously
            </summary>
            <param name="fragment">The fragment that was navigated to</param>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
            <summary>
            This event is fired when an error is encountered during a navigation
            </summary>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.Navigating">
            <summary>
            event NavigatingCancelEventHandler NavigationService.Navigating
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.Navigated">
            <summary>
            event NavigatedEventHandler NavigationService.Navigated
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
            <summary>
            event NavigationStoppedEventHandler NavigationService.NavigationStopped
            </summary>
            <value></value>
        </member>
        <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
            <summary>
            event FragmentNavigationEventHandler NavigationService.FragmentNavigation
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.Source">
            <summary>
            Gets or sets the source Uri
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
            <summary>
            Gets the Current Source Uri
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
            <summary>
            Gets a value used to determine if there are any entries on the forward stack
            </summary>
            <value></value>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
            <summary>
            Gets a value used to determine if there are any entries on the back stack
            </summary>
            <value></value>
        </member>
        <member name="T:System.Windows.Navigation.NavigationService.NavigationOperation">
            <summary>
            Class used within the Frame to manage navigation operations.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.NavigationService.NavigationOperation.#ctor(System.Uri,System.Uri,System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="uri"></param>
            <param name="uriBeforeMapping"></param>
            <param name="uriForJournal"></param>
            <param name="mode"></param>
            <param name="suppressJournalUpdate"></param>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.Uri">
            <summary>
            Gets or sets Uri used in the navigation operation, after passing through the DefaultUriMapper
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.Mode">
            <summary>
            Gets or sets NavigationMode used in the current operation.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.SuppressNotifications">
            <summary>
            Gets or sets a value indicating whether or not the operation is altering the Source property.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.NavigationService.NavigationOperation.SuppressJournalAdd">
            <summary>
            Gets or sets a value indicating whether the Journal should be updated based on this navigation operation
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.UriFragmentHelper">
            <summary>
            Provides navigation services to update the browser URL fragment (hash).  
            For use in creating browser fragment navigation events that will not 
            reload the page DOM.
            </summary>
            <remarks>
            The hosting Silverlight control must have HTML script access for 
            browser fragment navigation services to work.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.ScriptResourceKey">
            <summary>
            Resource key for embedded browser navigation JavaScript.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.MaxUriLength">
            <summary>
            Maximum allowed length of URLs generated by this server.
            </summary>
            <remarks>
            There are no standard restrictions on URL length.  This is an artificial limitation imposed to ensure cross-browser compatibility.
            </remarks>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.clientScriptsReady">
            <summary>
            A boolean used to indicate whether or not client scripts are ready on the page.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.Navigate(System.String)">
            <summary>
            Creates a navigation entry in the host browser using the provided 
            URI fragment.
            </summary>
            <param name="uriFragment">A URI fragment to record in the browser history.</param>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.Navigate(System.String,System.String)">
            <summary>
            Creates a navigation entry in the host browser using the provided 
            URI fragment and updates the host browser title.
            </summary>
            <param name="uriFragment">A URI fragment to record in the browser history.</param>
            <param name="title">A title string used to update the browser title text.</param>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.OnNavigated">
            <summary>
            Raises the Navigated event.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.ValidateUrlLengthRestrictions(System.String)">
            <summary>
            Validates that the <paramref name="uriFragment"/> value will not exceed the safe URI length limit.
            </summary>
            <param name="uriFragment">A URI fragment to record in the browser history.</param>
            <returns>A value indicating whether or not the URI fragment value will exeed the safe URI length limit.</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.RenderClientScript">
            <summary>
            Retrieves and renders browser history JavaScript from our resource manifest.
            </summary>
            <returns>
            A value indicating whether or not the required browser history client script
            was found and rendered on the host page.
            </returns>
        </member>
        <member name="E:System.Windows.Navigation.UriFragmentHelper.Navigated">
            <summary>
            Occurs when the browser URL fragment has changed.
            </summary>
            <remarks>
            The current System.Windows.Application instance will be passed as the event sender.
            </remarks>
        </member>
        <member name="P:System.Windows.Navigation.UriFragmentHelper.IsEnabled">
            <summary>
            Gets a value indicating whether or not the UriFragmentHelper can be used.
            </summary>
            <remarks>
            The hosting Silverlight control must have HTML script access for 
            the UriFragmentHelper to work.
            </remarks>
        </member>
        <member name="T:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy">
            <summary>
            Proxy used internally to communicate with the browser.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.ScriptObjectKey">
            <summary>
            Script object key used in client JavaScript to access the proxy object.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.ScriptMethodKey">
            <summary>
            Script object method key used in client JavaScript to access the proxy object navigation method.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.instance">
            <summary>
            Singleton instance of proxy object.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy._sysScriptObject">
            <summary>
            Reference to HTML DOM window.Sys object.
            </summary>
        </member>
        <member name="F:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy._navigatorScriptObject">
            <summary>
            Reference to HTML DOM window.Sys.Navigator object.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.BrowserNavigated">
            <summary>
            Notifies the UriFragmentHelper of a browser navigation event.
            </summary>
            <remarks>
            This method is intended to be invoked by client scripts through the HTML bridge.
            </remarks>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.Navigate(System.String,System.String)">
            <summary>
            Navigates the browser using the provided URI Fragment.
            </summary>
            <param name="uriFragment">A URI fragment to place in the browser location URI.</param>
            <param name="title">Browser title string.</param>
        </member>
        <member name="M:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.RegisterSelf">
            <summary>
            Registers the current application for browser navigation interop.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.Current">
            <summary>
            Gets a reference to singleton BrowserNavigationProxy instance.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.SysScriptObject">
            <summary>
            Gets the HTML page "Sys" script object or returns null if not found.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.UriFragmentHelper.BrowserNavigationProxy.NavigatorScriptObject">
            <summary>
            Gets the HTML page "Sys.Navigator" script object or returns null if not found.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.UriMapperBase">
            <summary>
            Maps a URI into a new URI based on mapping rules defined in a concrete implementation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)">
            <summary>
            Maps a given URI and returns a mapped URI.
            </summary>
            <param name="uri">Original URI value to be mapped to a new URI.</param>
            <returns>A URI derived from the <paramref name="uri"/> parameter.</returns>
        </member>
        <member name="T:System.Windows.Navigation.UriMapper">
            <summary>
            Default IUriMapper implementation that uses a List of UriMapping 
            objects to map and transform URI values.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriMapper.MapUri(System.Uri)">
            <summary>
            Maps a given URI and returns a mapped URI.
            </summary>
            <param name="uri">Original URI value to be mapped to a new URI.</param>
            <returns>A URI derived from the <paramref name="uri"/> parameter.</returns>
        </member>
        <member name="P:System.Windows.Navigation.UriMapper.UriMappings">
            <summary>
            Gets or sets a list of UriMapping objects.
            </summary>
        </member>
        <member name="T:System.Windows.Navigation.UriMapping">
            <summary>
            Defines a URI to URI mapping.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Navigation.UriMapping.MapUri(System.Uri)">
            <summary>
            Attempts to process a Uri, if it matches the Uri template
            </summary>
            <param name="uri">The Uri to map</param>
            <returns>The Uri after mapping, or null if mapping did not succeed</returns>
        </member>
        <member name="P:System.Windows.Navigation.UriMapping.Uri">
            <summary>
            Gets or sets the original URI value or pattern.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.UriMapping.MappedUri">
            <summary>
            Gets or sets the mapped URI value or pattern.
            </summary>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriIsFragment(System.Uri)">
            <summary>
            Parses the Uri to determine if it is a fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>True if this Uri is a fragment, false if it is not</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetFragment(System.Uri)">
            <summary>
            Parses the Uri to retrieve the fragment, if present
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The fragment, or null if there is not one</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetAllButFragment(System.Uri)">
            <summary>
            Parses the Uri to strip off the fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The uri without the fragment</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetQueryString(System.Uri)">
            <summary>
            Parse the query string out of a Uri (the part folliwng the '?')
            </summary>
            <param name="uri">The uri to parse for a query string</param>
            <returns>The query string, without a leading '?'.  Empty string in the case of no query string present.</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriGetBaseValue(System.Uri)">
            <summary>
            Cut the query string off a given Uri, to process only the part before the '?', and strips off the fragment
            </summary>
            <param name="uri">The uri to parse</param>
            <returns>The uri without its query string, and without its fragment</returns>
        </member>
        <member name="M:System.Windows.Navigation.UriParsingHelper.InternalUriParseQueryStringToDictionary(System.Uri)">
            <summary>
            Parses the query string into name/value pairs
            </summary>
            <param name="uri">The Uri to parse the query string from</param>
            <returns>A dictionary containing one entry for each name/value pair in the query string</returns>
        </member>
        <member name="T:System.Windows.Navigation.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Journal_CannotGoBack">
            <summary>
              Looks up a localized string similar to The journal cannot go back when CanGoBack equals false..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Journal_CannotGoForward">
            <summary>
              Looks up a localized string similar to The journal cannot go forward when CanGoForward equals false..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.Journal_NavigateBrowserFailed">
            <summary>
              Looks up a localized string similar to Warning: Journal cannot navigate browser when UriFragmentHelper.IsEnabled equals false..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_CannotGoBack">
            <summary>
              Looks up a localized string similar to Cannot go back when CanGoBack equals false.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_CannotGoForward">
            <summary>
              Looks up a localized string similar to Cannot go forward when CanGoForward equals false.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_JournalOwnership_UsesParentJournal_OnlyTopLevel">
            <summary>
              Looks up a localized string similar to JournalOwnership can only be set to UsesParentJournal if this is a top-level Frame..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_NavigationToANullUriIsNotSupported">
            <summary>
              Looks up a localized string similar to Navigation to a null Uri is not supported.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.NavigationService_UriNotNavigable">
            <summary>
              Looks up a localized string similar to Navigation is only supported to relative Uri&apos;s that are fragments, or begin with &apos;/&apos; or which contain &apos;;component/&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_InvalidComponentSyntax">
            <summary>
              Looks up a localized string similar to Attempted to load local XAML with an invalid syntax.  When a &apos;;component/&apos; is present, it must have the assembly name on the left side, and the page path and name on the right..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_NoXAMLWasFound">
            <summary>
              Looks up a localized string similar to No XAML was found at the location &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_TheTypeSpecifiedInTheXClassCouldNotBeFound">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos;, specified in the x:Class of &apos;{1}&apos; could not be found in any loaded assembly..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.PageResourceContentLoader_XAMLWasUnloadable">
            <summary>
              Looks up a localized string similar to XAML at location &apos;{0}&apos; was unloadable..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriFragmentHelper_BrowserNavigationProxy_RegistrationFailed">
            <summary>
              Looks up a localized string similar to Unable to register BrowserNavigationProxy.  Exception: {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriFragmentHelper_HtmlBridgeDisabled">
            <summary>
              Looks up a localized string similar to The UriFragmentHelper is unavailable because the HTML bridge is disabled. Please ensure your Silverlight instance has script access.  For more information, see http://msdn.microsoft.com/en-us/library/system.windows.browser.htmlpage.isenabled(VS.95).aspx..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriFragmentHelper_MaximumUriLength">
            <summary>
              Looks up a localized string similar to The UriFragmentHelper is unable to navigate to the Uri fragment provided because doing so would violate the maximum Uri length restriction of 2048 characters..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapper_MustNotHaveANullUriMappingCollection">
            <summary>
              Looks up a localized string similar to UriMapper must not have a null UriMappingCollection..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_MappedUriTemplateMustBeSpecified">
            <summary>
              Looks up a localized string similar to MappedUri template must be specified..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotContainTheSameIdentifierMoreThanOnce">
            <summary>
              Looks up a localized string similar to Uri template cannot contain the same identifier more than once..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotHaveAFragment">
            <summary>
              Looks up a localized string similar to Uri template cannot have a fragment..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateCannotHaveAQueryString">
            <summary>
              Looks up a localized string similar to Uri template cannot have a query string..
            </summary>
        </member>
        <member name="P:System.Windows.Navigation.Resource.UriMapping_UriTemplateMustBeSpecified">
            <summary>
              Looks up a localized string similar to Uri template must be specified..
            </summary>
        </member>
    </members>
</doc>
